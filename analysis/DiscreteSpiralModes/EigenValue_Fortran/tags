!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ABSERR	k3sqrt.f90	/^DOUBLE PRECISION          ::ABSERR$/;"	v
AE	k3sqrt.f90	/^DOUBLE PRECISION        ::RE,AE,/;"	v
B	k3sqrt.f90	/^DOUBL/;"	v
BOUND	k3sqrt.f90	/^DOUBLE PRECISION          ::BOUND,/;"	v
C	k3sqrt.f90	/^DOUBLE PRECI/;"	v
CheckResult	k3sqrt.f90	/^SUBROUTINE CheckResult$/;"	s	function:Omega
ENDSTELLARDISK	k3sqrt.f90	/^SUBROUTINE ENDSTELLARDISK$/;"	s
EPSABS	k3sqrt.f90	/^DOUBLE PRECISION          ::BOUND,EPSREL,EPSABS$/;"	v
EPSREL	k3sqrt.f90	/^DOUBLE PRECISION          ::BOUND,EPSREL,/;"	v
ExpPart	k3sqrt.f90	/^RECURSIVE Function ExpPart(/;"	f	subroutine:findh1
F90	Makefile	/^F90=ifort$/;"	m
FCC	Makefile	/^FCC=icc$/;"	m
FFLAGS	Makefile	/^FFLAGS=  -L. -lslatec  -openmp -openmp-report0  -limf -fp-model precise -O2$/;"	m
FUN	k3sqrt.f90	/^function FUN(/;"	f
FindPhi1	k3sqrt.f90	/^SUBROUTINE FindPhi1(/;"	s
GravConst	k3sqrt.f90	/^DOUBLE PRECISION,PARAMETER::GravConst /;"	v	module:STELLARDISK
HDF5HOME	Makefile	/^HDF5HOME=$(HDF5_HOME)$/;"	m
IERR	k3sqrt.f90	/^INTEGER                   ::NEVAL,IERR,/;"	v
IFLAG	k3sqrt.f90	/^INTEGER                 ::l,IFLAG$/;"	v
INF	k3sqrt.f90	/^INTEGER                   ::NEVAL,IERR,LIMIT,LENW,LAST,INF$/;"	v
INIT_STELLARDISK	k3sqrt.f90	/^SUBROUTINE INIT_STELLARDISK(/;"	s
IWORK	k3sqrt.f90	/^INTEGER,ALLOCATABLE       ::IWORK(/;"	v
LAST	k3sqrt.f90	/^INTEGER                   ::NEVAL,IERR,LIMIT,LENW,LAST,/;"	v
LENW	k3sqrt.f90	/^INTEGER                   ::NEVAL,IERR,LIMIT,LENW,/;"	v
LIMIT	k3sqrt.f90	/^INTEGER                   ::NEVAL,IERR,LIMIT,/;"	v
NEVAL	k3sqrt.f90	/^INTEGER                   ::NEVAL,/;"	v
OBJECT	Makefile	/^OBJECT = rk4.o k3sqrt.o SearchAll.o$/;"	m
OBJECT2	Makefile	/^OBJECT2 = rk4.o k3sqrt.o FindOne.o$/;"	m
Omega	k3sqrt.f90	/^FUNCTION Omega(/;"	f
Q	k3sqrt.f90	/^DOUBLE PRECISION  Q,/;"	v
Qod	k3sqrt.f90	/^DOUBLE PRECISION  Q,r,Qod,/;"	v
RE	k3sqrt.f90	/^DOUBLE PREC/;"	v
RK	rk4.f90	/^MODULE RK$/;"	m
RR	k3sqrt.f90	/^DOUBLE PRECISION        ::RE,AE,B,C,RR$/;"	v
STELLARDISK	k3sqrt.f90	/^MODULE STELLARDISK$/;"	m
Sigma	k3sqrt.f90	/^recursive function Sigma(/;"	f
Sigma0	k3sqrt.f90	/^DOUBLE PRECISION          ::Sigma0,/;"	v
ToomreQ	k3sqrt.f90	/^DOUBLE PRECISION  Q,r,Qod,ToomreQ,/;"	v
WORK	k3sqrt.f90	/^DOUBLE PRECISION,ALLOCATABLE ::WORK(/;"	v
a	FindOne.f90	/^DOUBLE PRECISION,ALLOCATABLE    ::a(/;"	v	program:find_all
a	k3sqrt.f90	/^DOUBLE PRECISION                ::a,/;"	v
a	k3sqrt.f90	/^DOUBLE PRECISION          ::m,a,/;"	v
ans	k3sqrt.f90	/^DOUBLE PRECISION          ::ans$/;"	v
ans	main.f90	/^DOUBLE PRECISION                ::r,ans(/;"	v	program:test
b	k3sqrt.f90	/^DOUBLE PRECISION                ::a,b$/;"	v
b	k3sqrt.f90	/^DOUBLE PRECISION          ::m,a,b$/;"	v
coord	FindOne.f90	/^        DOUBLE PRECISION::coord(/;"	k	type:searchgrid_type
coord	SearchAll.f90	/^        DOUBLE PRECISION,ALLOCATABLE::coord(/;"	k	type:searchgrid_type
coord	k3sqrt.f90	/^        DOUBLE PRECISION::coord(/;"	k	type:searchgrid_type
curf	k3sqrt.f90	/^function curf(/;"	f
dOmega	k3sqrt.f90	/^DOUBLE PRECISION  dOmega$/;"	v
di	SearchAll.f90	/^DOUBLE PRECISION                ::dr,wri,wii,di,/;"	v	program:test
di	k3sqrt.f90	/^DOUBLE PRECISION                ::dr,wri,wii,di,/;"	v
domain	SearchAll.f90	/^DOUBLE PRECISION                ::domain(/;"	v	program:test
dr	SearchAll.f90	/^DOUBLE PRECISION                ::dr,/;"	v	program:test
dr	k3sqrt.f90	/^DOUBLE PRECISION                ::dr,/;"	v
dr	k3sqrt.f90	/^DOUBLE PRECISION  dr$/;"	v
dsimplifiedPoisson	k3sqrt.f90	/^DOUBLE COMPLEX                  ::dsimplifiedPoisson$/;"	v
err	SearchAll.f90	/^DOUBLE PRECISION                ::dr,wri,wii,di,err$/;"	v	program:test
err	k3sqrt.f90	/^DOUBLE PRECISION                ::dr,wri,wii,di,err$/;"	v
error	FindOne.f90	/^        DOUBLE PRECISION::error(/;"	k	type:searchgrid_type
error	SearchAll.f90	/^        DOUBLE PRECISION,ALLOCATABLE::error(/;"	k	type:searchgrid_type
error	k3sqrt.f90	/^        DOUBLE PRECISION::error(/;"	k	type:searchgrid_type
error	k3sqrt.f90	/^DOUBLE COMPLEX          ::error$/;"	v
f	rk4.f90	/^FUNCTION f(/;"	f	subroutine:rk45
f	rk4.f90	/^RECURSIVE FUNCTION f(/;"	f
find_all	FindOne.f90	/^PROGRAM find_all$/;"	p
findh1	k3sqrt.f90	/^SUBROUTINE findh1(/;"	s
findpspsd	k3sqrt.f90	/^SUBROUTINE findpspsd(/;"	s
force	k3sqrt.f90	/^DOUBLE PRECISION                ::force(/;"	v
four21	k3sqrt.f90	/^function four21(/;"	f
func	k3sqrt.f90	/^        funct/;"	f	function:Omega
g	k3sqrt.f90	/^DOUBLE PRECISION,PARAMETER::g /;"	v	module:STELLARDISK
h	k3sqrt.f90	/^DOUBLE COMPLEX,INTENT(IN)       ::phi/;"	v
h	k3sqrt.f90	/^DOUBLE PRECISION        ::h=/;"	v
hh1	k3sqrt.f90	/^DOUBLE COMPLEX                  ::hh1,/;"	v
hh1	k3sqrt.f90	/^DOUBLE COMPLEX                  ::uu,hh1$/;"	v
i	SearchAll.f90	/^INTEGER                         ::l,i,/;"	v	program:test
i	k3sqrt.f90	/^INTEGER                         ::i,/;"	v
i	k3sqrt.f90	/^INTEGER                         ::l,i,/;"	v
i	main.f90	/^INTEGER                         ::i$/;"	v	program:test
ipc	SearchAll.f90	/^INTEGER                         ::ipc$/;"	v	program:test
ipc	k3sqrt.f90	/^INTEGER                         ::ipc$/;"	v
j	SearchAll.f90	/^INTEGER                         ::l,i,j,/;"	v	program:test
j	k3sqrt.f90	/^INTEGER                         ::i,j,/;"	v
j	k3sqrt.f90	/^INTEGER                         ::l,i,j,/;"	v
k	k3sqrt.f90	/^INTEGER                         ::i,j,k,/;"	v
k3sqrt	k3sqrt.f90	/^function k3sqrt(/;"	f
k3sqrtlog	k3sqrt.f90	/^SUBROUTINE k3sqrtlog$/;"	s
kappa	k3sqrt.f90	/^DOUBLE PRECISION  kappa,/;"	v
l	FindOne.f90	/^INTEGER                          ::l$/;"	v	program:find_all
l	SearchAll.f90	/^INTEGER                         ::l,/;"	v	program:test
l	k3sqrt.f90	/^INTEGER                         ::i,j,k,l,/;"	v
l	k3sqrt.f90	/^INTEGER                         ::l,/;"	v
l	k3sqrt.f90	/^INTEGER                 ::l,/;"	v
lcoord	SearchAll.f90	/^        DOUBLE PRECISION,ALLOCATABLE::lcoord(/;"	k	type:searchgrid_type
lcoord	k3sqrt.f90	/^        DOUBLE PRECISION::lcoord(/;"	k	type:searchgrid_type
lerror	SearchAll.f90	/^        DOUBLE PRECISION,ALLOCATABLE::lerror(/;"	k	type:searchgrid_type
lerror	k3sqrt.f90	/^        DOUBLE PRECISION::lerror(/;"	k	type:searchgrid_type
m	k3sqrt.f90	/^DOUBLE PRECISION          ::m,/;"	v
n	SearchAll.f90	/^INTEGER                         ::l,i,j,p(1),n$/;"	v	program:test
n	k3sqrt.f90	/^INTEGER                         ::i,j,k,l,n$/;"	v
n	k3sqrt.f90	/^INTEGER                         ::i,n$/;"	v
n	k3sqrt.f90	/^INTEGER                         ::n$/;"	v
now	SearchAll.f90	/^INTEGER                         ::now(/;"	v	program:test
now	k3sqrt.f90	/^INTEGER                         ::now(/;"	v
nu	k3sqrt.f90	/^function nu(/;"	f
p	SearchAll.f90	/^INTEGER                         ::l,i,j,p(/;"	v	program:test
p	k3sqrt.f90	/^INTEGER                         ::l,i,j,p(/;"	v
p	k3sqrt.f90	/^RECURSIVE FUNCTION p(/;"	f
pDisk	k3sqrt.f90	/^FUNCTION pDisk(/;"	f	function:Omega
para	k3sqrt.f90	/^DOUBLE PRECISION,POINTER,SAVE           ::para(/;"	v	module:STELLARDISK
phi	k3sqrt.f90	/^DOUBLE COMPLEX,INTENT(IN)       ::phi,/;"	v
phi1	k3sqrt.f90	/^DOUBLE PRECISION                ::phi1$/;"	v
phir	k3sqrt.f90	/^DOUBLE COMPLEX                  ::hh1,phir$/;"	v
pi	k3sqrt.f90	/^DOUBLE PRECISION,PARAMETER::pi /;"	v	module:STELLARDISK
q	k3sqrt.f90	/^DOUBLE COMPLEX                  ::q$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION                ::forc/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION                ::r$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION          ::Sigma0,r$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION        ::h=10d-5   ,r$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION  Q,r,/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION  kappa,r$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION,INTENT(IN)     ::r$/;"	v
r	k3sqrt.f90	/^DOUBLE PRECISION,INTENT(IN)     ::r,/;"	v
r	main.f90	/^DOUBLE PRECISION                ::r,/;"	v	program:test
rad	k3sqrt.f90	/^DOUBLE PRECISION                ::rad$/;"	v
recvgrid	SearchAll.f90	/^type(searchgrid_type)           ::searchgrid,recvgrid$/;"	v	program:test
recvgrid	k3sqrt.f90	/^type(searchgrid_type)           ::searchgrid,recvgrid$/;"	v
rk45	rk4.f90	/^SUBROUTINE rk45(/;"	s	module:RK
rq	k3sqrt.f90	/^DOUBLE PRECISION  Q,r,Qod,ToomreQ,rq$/;"	v
rr	k3sqrt.f90	/^DOUBLE PRECISION,INTENT(IN)             ::rr$/;"	v
rr	k3sqrt.f90	/^DOUBLE PRECISION,INTENT(IN)::rr$/;"	v
runit	k3sqrt.f90	/^DOUBLE PRECISION                ::runit(/;"	v
searchgrid	FindOne.f90	/^type(searchgrid_/;"	v	program:find_all
searchgrid	SearchAll.f90	/^type(searchgrid_/;"	v	program:test
searchgrid	k3sqrt.f90	/^type(searchgrid_/;"	v
searchgrid_type	FindOne.f90	/^type searchgrid_type$/;"	t	program:find_all
searchgrid_type	SearchAll.f90	/^type searchgrid_type$/;"	t	program:test
searchgrid_type	k3sqrt.f90	/^type searchgrid_type$/;"	t
searchgrid_type	k3sqrt.f90	/^type searchgrid_type$/;"	t	subroutine:single_grid
sigma1	k3sqrt.f90	/^FUNCTION sigma1(/;"	f
single_grid	k3sqrt.f90	/^SUBROUTINE single_grid(/;"	s
snsd	k3sqrt.f90	/^function snsd(/;"	f
spiral	k3sqrt.f90	/^type(spiral_/;"	v
test	SearchAll.f90	/^program test$/;"	p
test	main.f90	/^program test$/;"	p
th	k3sqrt.f90	/^DOUBLE PRECISION                ::force(2),r,th$/;"	v
th	k3sqrt.f90	/^DOUBLE PRECISION,INTENT(IN)     ::r,th$/;"	v
thunit	k3sqrt.f90	/^DOUBLE PRECISION                ::runit(2),thunit(/;"	v
ui	k3sqrt.f90	/^DOUBLE COMPLEX                  ::ui(/;"	v
uu	k3sqrt.f90	/^DOUBLE COMPLEX                  ::uu,/;"	v
uu	k3sqrt.f90	/^DOUBLE COMPLEX          ::uu(/;"	v
wii	FindOne.f90	/^DOUBLE PRECISION                  ::wri,wii$/;"	v	program:find_all
wii	SearchAll.f90	/^DOUBLE PRECISION                ::dr,wri,wii,/;"	v	program:test
wii	k3sqrt.f90	/^DOUBLE PRECISION                ::dr,wri,wii,/;"	v
withf	k3sqrt.f90	/^LOGICAL,PARAMETER         ::withf /;"	v	module:STELLARDISK
wri	FindOne.f90	/^DOUBLE PRECISION                  ::wri,/;"	v	program:find_all
wri	SearchAll.f90	/^DOUBLE PRECISION                ::dr,wri,/;"	v	program:test
wri	k3sqrt.f90	/^DOUBLE PRECISION                ::dr,wri,/;"	v
